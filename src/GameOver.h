#ifndef __AKI_GAMEOVER_H__
#define __AKI_GAMEOVER_H__

/////////////////////////////////
// ゲームオーバーシーケンス
/////////////////////////////////
namespace Sequence
{
	class CGameOver : public IBase
	{
	public:	// 外部公開

		/////////////////////////////////
		// 定数
		/////////////////////////////////
		CONSTANT LPSTR	BACKGROUND_TEX_PASS;	// 背景のテクスチャパス
		CONSTANT BYTE	FADEIN_OUT_SPEED;		// フェードイン・アウトスピード
		CONSTANT BYTE	FADEOUT_MIN;			// フェードアウトの最小値

		/////////////////////////////////
		// メソッド
		/////////////////////////////////
		
		// コンストラクタ
		CGameOver();

		// デストラクタ
		~CGameOver();

		//////////////////////////////////////////////////
		//	・関数名	FileLoad
		//	・説明		読み込みや初期化を行う
		//	・引数		なし
		//	・戻り値	なし
		//////////////////////////////////////////////////
		void FileLoad();

		//////////////////////////////////////////////////
		//	・関数名	RunProc
		//	・説明		ゲームオーバーメイン関数
		//	・引数		なし
		//	・戻り値	処理があるならtrue
		//				終了ならfalseを返す
		//////////////////////////////////////////////////
		bool RunProc();

		//////////////////////////////////////////////////
		//	・関数名	GetNext
		//	・説明		次のシーケンスを獲得
		//	・引数		なし
		//	・戻り値	タイトルシーケンスを返す
		//////////////////////////////////////////////////
		IBase* GetNext();
		
	private:	// 非公開
	
		/////////////////////////////////
		// フィールド
		/////////////////////////////////
		bool		m_IsRun;		// 処理を走るかどうか
		CSprite		m_Sprite;		// スプライトデバイス
		CTexture*	m_lpBackTex;	// 背景テクスチャ
		short		m_Alpha;		// アルファ値
		bool		m_IsAlphaPlus;	// アルファ値を足すかどうか

		/////////////////////////////////
		// メソッド
		/////////////////////////////////
		
		//////////////////////////////////////////////////
		//	・関数名	Update
		//	・説明		更新を行う
		//	・引数		なし
		//	・戻り値	なし
		//////////////////////////////////////////////////
		void Update();

		//////////////////////////////////////////////////
		//	・関数名	Draw
		//	・説明		描画を行う
		//	・引数		なし
		//	・戻り値	なし
		//////////////////////////////////////////////////
		void Draw();

		//////////////////////////////////////////////////
		//	・関数名	Load
		//	・説明		読み込みを行う
		//	・引数		なし
		//	・戻り値	なし
		//////////////////////////////////////////////////
		void Load();

		//////////////////////////////////////////////////
		//	・関数名	Release
		//	・説明		解放を行う
		//	・引数		なし
		//	・戻り値	なし
		//////////////////////////////////////////////////
		void Release();
	};
}

#endif // __AKI_GAMEOVER_H__