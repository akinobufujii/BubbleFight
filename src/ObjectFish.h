#ifndef __AKI_OBJECTFISH_H__
#define __AKI_OBJECTFISH_H__

//////////////////////////////
// 単なる魚(見栄え用)
//////////////////////////////
class CObjectFish
{
public:	// 外部公開

	//////////////////////////////
	// 型宣言
	//////////////////////////////
	typedef BYTE	FLGTYPE;	// フラグ型

	//////////////////////////////
	// 定数
	//////////////////////////////
	CONSTANT float	MOVE_SPEED;		// 移動速度
	CONSTANT float	SIZE;			// 大きさ
	CONSTANT float	TEXPOS_WIDTH;	// テクスチャの幅
	CONSTANT float	TEXPOS_HEIGHT;	// テクスチャの高さ
	CONSTANT BYTE	NODE_RANGE;		// 子の範囲
	CONSTANT BYTE	KIND_NUM;		// 種類最大数

	enum
	{
		NODE_MAX = 10	// 子の最大数
	};

	//////////////////////////////
	// フラグ定数
	//////////////////////////////
	CONSTANT FLGTYPE	FLG_TURN;	// 振り返った

	//////////////////////////////
	// メソッド
	//////////////////////////////

	// コンストラクタ
	CObjectFish();

	// デストラクタ
	~CObjectFish();

	//////////////////////////////////////////////////
	//	・関数名	Update
	//	・説明		更新を行う
	//	・引数		
	//		- is_collision	衝突判定を行うかどうか
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void Update( bool is_collision = true );

	//////////////////////////////////////////////////
	//	・関数名	Draw
	//	・説明		描画を行う
	//	・引数		
	//		- lp_device	デバイス
	//		- mat		影響させる行列
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void Draw( const LPDIRECT3DDEVICE9 lp_device, const D3DXMATRIX& mat );

	//////////////////////////////////////////////////
	//	・関数名	SetPos
	//	・説明		出現位置を設定する
	//	・引数		
	//		- pos	出現位置
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void SetPos( const D3DXVECTOR3& pos );
	
	//////////////////////////////////////////////////
	//	・関数名	SetRotY
	//	・説明		Y軸回転を設定する
	//	・引数		
	//		- rot	回転数
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void SetRotY( const float rot );	

	//////////////////////////////////////////////////
	//	・関数名	GetMatrix
	//	・説明		行列を獲得
	//	・引数		なし
	//	・戻り値	行列を返す
	//////////////////////////////////////////////////
	inline D3DXMATRIX GetMatrix() const 
	{
		return m_mMat;
	}

private:	// 非公開

	//////////////////////////////
	// フィールド
	//////////////////////////////
	CBoard	m_Board;	// 板ポリゴン
	CMatrix	m_mMat;		// 行列
	FLGTYPE	m_Flg;		// フラグ

	CMatrix m_NodeMat[ NODE_MAX ];	
};

#endif	// __AKI_OBJECTFISH_H__