#ifndef __AKI_DIRECTGRAPHICS_H__
#define __AKI_DIRECTGRAPHICS_H__

//////////////////////////////////////////////////
// DirectX関連
//////////////////////////////////////////////////
namespace D3D
{
	//////////////////////////////////////////////////
	//	・関数名	Init
	//	・説明		Direct3Dを初期化する
	//	・引数		
	//		- hwnd	ウィンドウハンドル
	//	・戻り値	初期化成功ならばtrue
	//				失敗ならばfalseを返す
	//////////////////////////////////////////////////
	bool Init( HWND hwnd, BOOL iswindow );

	//////////////////////////////////////////////////
	//	・関数名	Release
	//	・説明		Direct3Dを解放する
	//	・引数		なし
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void Release();

	//////////////////////////////////////////////////
	//	・関数名	Begin
	//	・説明		描画を開始するときに呼び出す関数
	//	・引数		なし
	//	・戻り値	成功ならばtrue
	//				失敗ならばfalseを返す
	//////////////////////////////////////////////////
	bool Begin();

	//////////////////////////////////////////////////
	//	・関数名	End
	//	・説明		描画を終了するときに呼び出す関数
	//				プライマリーに映し出す処理も行う
	//	・引数		なし
	//	・戻り値	成功ならばtrue
	//				失敗ならばfalseを返す
	//////////////////////////////////////////////////
	bool End();

	//////////////////////////////////////////////////
	//	・関数名	Clear
	//	・説明		画面を指定色でクリアする
	//	・引数		
	//		- color		クリアする色
	//		- target	クリアするターゲット
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void Clear( D3DCOLOR color, DWORD target = D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER );
	
	//////////////////////////////////////////////////
	//	・関数名	GetDevice
	//	・説明		デバイスを獲得
	//	・引数		なし
	//	・戻り値	デバイスを返す
	//////////////////////////////////////////////////
	const LPDIRECT3DDEVICE9	GetDevice();

	//////////////////////////////////////////////////
	//	・関数名	GetBackBufferSurcface
	//	・説明		バックバッファのサーフェス獲得
	//	・引数		なし
	//	・戻り値	バックバッファのサーフェス返す
	//////////////////////////////////////////////////
	const LPDIRECT3DSURFACE9 GetBackBufferSurcface();

	//////////////////////////////////////////////////
	//	・関数名	GetZBufer
	//	・説明		Zバッファのサーフェスを獲得
	//	・引数		なし
	//	・戻り値	Zバッファのサーフェスを返す
	//////////////////////////////////////////////////
	const LPDIRECT3DSURFACE9 GetZBufer();
}

#endif // __AKI_DIRECTGRAPHICS_H__