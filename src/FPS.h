#ifndef __AKI_FPS_H__
#define __AKI_FPS_H__

///////////////////////////////////
// FrameParSecond管理クラス
///////////////////////////////////
class CFPS
{
public:	// 外部公開

	//////////////////////////////////////////////////
	// 定数
	//////////////////////////////////////////////////
	static const double SECOND;	// 1秒(実数型)

	enum 
	{
		FPS	= 30	// フレーム数
	};

	//////////////////////////////////////////////////
	// メソッド
	//////////////////////////////////////////////////

	// コンストラクタ
	CFPS();
	
	//////////////////////////////////////////////////
	//	・関数名	Update
	//	・説明		更新を行う
	//	・引数		なし
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void Update();

	//////////////////////////////////////////////////
	//	・関数名	IsSlow
	//	・説明		1フレームが今遅いかどうかを判断する
	//	・引数		なし
	//	・戻り値	遅ければtrue
	//				そうでなければfalseを返す
	//////////////////////////////////////////////////
	static bool IsSlow()
	{
		return m_SlowFlg;
	}

private:	// 非公開

	//////////////////////////////////////////////////
	// フィールド
	//////////////////////////////////////////////////
	int			m_Count;			// カウンタ
	int			m_CountTime;		// フレーム時間保存用
	int			m_SaveTime;			// 前のフレームの時間保存用
	int			m_FlameAvg[ FPS ];	// 1周平均用配列
	double		m_Avg;				// 平均
	static bool	m_SlowFlg;			// 遅いかどうか
};

#endif // __AKI_FPS_H__