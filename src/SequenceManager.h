#ifndef __AKI_SEQUENCEMANAGER_H__
#define __AKI_SEQUENCEMANAGER_H__

/////////////////////////////////
// シーケンスマネージャー
/////////////////////////////////
namespace Sequence
{
	class IBase;	// 不完全型定義

	class CManager
	{
	public:	// 外部公開

		/////////////////////////////////
		// メソッド
		/////////////////////////////////

		// コンストラクタ
		CManager();

		// デストラクタ
		~CManager();

		//////////////////////////////////////////////////
		//	・関数名	GameLoop
		//	・説明		シーケンス遷移をすべて行う
		//	・引数		なし
		//	・戻り値	更新が必要ならばtrue
		//				終了したならばfalseを返す
		//////////////////////////////////////////////////
		bool GameLoop();

	private:	// 非公開

		/////////////////////////////////
		// フィールド
		/////////////////////////////////
		IBase*			m_lpRoot;	// 今のシーケンス
		CFPS			m_Fps;		// FrameParSecond
		CLoading*		m_lpLoad;	// 読み込み中描画クラス
		boost::thread*	m_lpThread;	// スレッド

		/////////////////////////////////
		// メソッド
		/////////////////////////////////

		//////////////////////////////////////////////////
		//	・関数名	LoadStart
		//	・説明		マルチスレッドを起動し、
		//				スレッド側で描画を行う
		//				終了するにはLoadEndを呼ぶ
		//	・引数		なし
		//	・戻り値	なし
		//////////////////////////////////////////////////
		void LoadStart();

		//////////////////////////////////////////////////
		//	・関数名	LoadEnd
		//	・説明		マルチスレッドを終了する
		//				LoadStartを呼んでいることが条件
		//	・引数		なし
		//	・戻り値	なし
		//////////////////////////////////////////////////
		void LoadEnd();
	};
}
#endif // __AKI_SEQUENCEMANAGER_H__