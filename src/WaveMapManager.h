#ifndef __WAVEMAPMANAGER_H__
#define __WAVEMAPMANAGER_H__

//////////////////////////////////////////////////
// 波マップマネージャー
// 波マップの更新＋法線マップ作成を行う
// 内部でレンダーターゲットを作る
//////////////////////////////////////////////////
class CWaveMapManager : public boost::noncopyable
{
public: // 外部公開

	//////////////////////////////////////////////////
	// メソッド
	//////////////////////////////////////////////////

	// コンストラクタ
	CWaveMapManager();

	// デストラクタ
	~CWaveMapManager();

	//////////////////////////////////////////////////
	//	・関数名	Create
	//	・説明		波マップ用のレンダーターゲットを作る
	//				レンダーターゲットは3枚作られる
	//	・引数		
	//		- lpdevice	デバイス
	//		- size		マップのサイズ
	//	・戻り値	成功ならtrue失敗ならfalseを返す
	//////////////////////////////////////////////////
	bool Create( LPDIRECT3DDEVICE9 lpdevice, UINT size );

	//////////////////////////////////////////////////
	//	・関数名	Update
	//	・説明		波マップ更新を行う
	//				必ず描画中に呼び出す
	//	・引数		
	//		- lpdevice	デバイス
	//	・戻り値	更新した法線マップを返す
	//////////////////////////////////////////////////
	const LPDIRECT3DTEXTURE9 Update( LPDIRECT3DDEVICE9 lpdevice );

	//////////////////////////////////////////////////
	//	・関数名	GetMap
	//	・説明		明示的に法線マップを獲得(更新はしない)
	//	・引数		なし
	//	・戻り値	法線マップを返す
	//////////////////////////////////////////////////
	inline const LPDIRECT3DTEXTURE9 GetMap() const
	{
		return m_NormalMap;
	}

	//////////////////////////////////////////////////
	//	・関数名	operator const LPDIRECT3DTEXTURE9
	//	・説明		暗黙に法線マップを獲得(更新はしない)
	//	・引数		なし
	//	・戻り値	法線マップを返す
	//////////////////////////////////////////////////
	inline operator const LPDIRECT3DTEXTURE9() const
	{
		return GetMap();
	}

private:	// 非公開

	//////////////////////////////////////////////////
	// フィールド
	//////////////////////////////////////////////////
	CTexture	m_WaveMap[ 2 ];	// 波マップ更新用レンダーターゲット
	CTexture	m_NormalMap;	// 法線マップ用レンダーターゲット
	CEffect*	m_lpWaveShader;	// 波マップ＋法線マップ用シェーダ
	CBoard		m_Board;		// 描画用の板ポリゴン
	bool		m_IsFirst;		// 一番初めの描画かどうか

	//////////////////////////////////////////////////
	// メソッド
	//////////////////////////////////////////////////

	//////////////////////////////////////////////////
	//	・関数名	UpdateWave
	//	・説明		波マップの更新
	//	・引数		
	//		- lpdevice	デバイス
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void UpdateWaveMap( LPDIRECT3DDEVICE9 lpdevice );

	//////////////////////////////////////////////////
	//	・関数名	UpdateNormalMap
	//	・説明		法線マップの更新
	//	・引数		
	//		- lpdevice	デバイス
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void UpdateNormalMap( LPDIRECT3DDEVICE9 lpdevice );
};

#endif	// __WAVEMAPMANAGER_H__