#ifndef __AKI_LIMITWALL_H__
#define __AKI_LIMITWALL_H__

//////////////////////////////////////////////////
// 境界壁
//////////////////////////////////////////////////
class CLimitWalls
{
public:	// 外部公開

	//////////////////////////////////////////////////
	// 定数
	//////////////////////////////////////////////////
	enum
	{
		WALL_NUM = 4	// 壁の数
	};

	CONSTANT float	FADEIN_OUT_SPEED;	// フェードイン・アウトの速度
	CONSTANT LPCSTR	TEXPATH_WALL;		// 壁のテクスチャーパス

	//////////////////////////////////////////////////
	// メソッド
	//////////////////////////////////////////////////

	// コンストラクタ
	CLimitWalls();
	
	// デストラクタ
	~CLimitWalls();

	//////////////////////////////////////////////////
	//	・関数名	Update
	//	・説明		更新を行う
	//	・引数		なし
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void Update();

	//////////////////////////////////////////////////
	//	・関数名	Draw
	//	・説明		描画を行う
	//	・引数		
	//		- lp_device	デバイス
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void Draw( const LPDIRECT3DDEVICE9 lp_device );

	//////////////////////////////////////////////////
	//	・関数名	SetLimit
	//	・説明		壁の表示を決める
	//				原点よりX、Z方向に位置が設定される
	//	・引数		
	//		- limit	範囲(正の数)
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void SetLimit( const float limit );

	//////////////////////////////////////////////////
	//	・関数名	SetScale
	//	・説明		壁の大きさを正方形で設定する
	//	・引数		
	//		- limit	1辺の長さ
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void SetScale( const float scale );

	//////////////////////////////////////////////////
	//	・関数名	SetScale
	//	・説明		壁の大きさを長方形で設定する
	//	・引数		
	//		- width		幅
	//		- height	高さ
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void SetScale( const float width, const float height );

	//////////////////////////////////////////////////
	//	・関数名	SetTexture
	//	・説明		壁に貼るテクスチャを設定する
	//	・引数		
	//		- lp_tex	テクスチャ
	//	・戻り値	なし
	//////////////////////////////////////////////////
	inline void SetTexture( LPDIRECT3DTEXTURE9 lp_tex ) 
	{
		m_Texture = lp_tex;
	}
	
private:	// 非公開

	//////////////////////////////////////////////////
	// 構造体
	//////////////////////////////////////////////////
	struct WALLDATA
	{
		CBoard	Board;	// 板ポリゴン
		CMatrix	mMat;	// 行列
	};

	//////////////////////////////////////////////////
	// フィールド
	//////////////////////////////////////////////////
	WALLDATA			m_Walls[ WALL_NUM ];	// 壁
	LPDIRECT3DTEXTURE9	m_Texture;				// テクスチャ(共通)
	bool				m_IsAlphaPlus;			// アルファ値加算するかどうか
	float				m_NowAlpha;				// アルファ値
};

#endif	// __AKI_LIMITWALL_H__