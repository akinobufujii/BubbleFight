#ifndef __AKI_PLANKTONMANAGER_H__
#define __AKI_PLANKTONMANAGER_H__

//////////////////////////////////////////////////
// 不完全型定義
//////////////////////////////////////////////////
class CPlankton;

//////////////////////////////////////////////////
// プランクトンマネージャー
//////////////////////////////////////////////////
class CPlanktonManager
{
public:	// 外部公開

	//////////////////////////////////////////////////
	// 定数
	//////////////////////////////////////////////////
	CONSTANT LPSTR	TEX_PASS;	// プランクトンのテクスチャパス

	//////////////////////////////////////////////////
	// 型宣言
	//////////////////////////////////////////////////
	typedef std::list<CPlankton*>	PLANKTONLIST;	// プランクトンリスト型

	//////////////////////////////////////////////////
	// メソッド
	//////////////////////////////////////////////////

	// コンストラクタ
	CPlanktonManager();

	// デストラクタ
	~CPlanktonManager();

	//////////////////////////////////////////////////
	//	・関数名	Update
	//	・説明		更新を行う
	//	・引数		なし
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void Update();

	//////////////////////////////////////////////////
	//	・関数名	Draw
	//	・説明		描画を行う
	//	・引数		
	//		- lp_device	デバイス
	//		- camera	ビルボード判定に使用するカメラ
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void Draw( const LPDIRECT3DDEVICE9 lpdevice, const CCamera* camera );

	//////////////////////////////////////////////////
	//	・関数名	SetNum
	//	・説明		プランクトンオブジェクトを
	//				指定された数にする
	//	・引数		
	//		- num	数
	//	・戻り値	なし
	//////////////////////////////////////////////////
	void SetNum( const UINT num );

private:	// 非公開

	//////////////////////////////////////////////////
	// フィールド
	//////////////////////////////////////////////////
	PLANKTONLIST	m_PlanktonList;	// プランクトンリスト
};

#endif // __AKI_PLANKTONMANAGER_H__